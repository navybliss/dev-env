#!/usr/bin/env bash

set -e
# Determine the original user's home directory
if [ -n "$SUDO_USER" ]; then
    USER_HOME=$(getent passwd "$SUDO_USER" | cut -d: -f6)
else
    USER_HOME="$HOME"
fi
# Set XDG_CONFIG_HOME with a default value
XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$USER_HOME/.config}"

#XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}" <-- this $HOME points to /root

#script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
script_dir=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)
dry="0"

while [[ $# > 0 ]]; do
    if [[ $1 == "--dry" ]]; then
	dry="1"
    fi
    shift
done

log() {
    if [[ $dry == "1" ]]; then
	echo "[DRY_RUN]: $@"
    else
	echo "$@"
    fi
}

execute() {
    log "execute $@"
    if [[ $dry == "1" ]]; then
	return
    fi
    "$@"
}

log "=============== dev-env ================="

copy_dir() {
    from=$1
    to=$2
    pushd $from > /dev/null
    dirs=$(find . -mindepth 1 -maxdepth 1 -type d)
    for dir in $dirs; do
	execute rm -rf $to/$dir
	execute cp -r $dir $to/$dir

    done
    popd > /dev/null
}

copy_file() {
    from=$1
    to=$2
    name=$(basename $from)
    execute rm -rf $to/$name
    execute cp -r $from $to/$name
}

copy_dir .config $XDG_CONFIG_HOME
copy_dir .local $USER_HOME/.local
copy_dir .cache $USER_HOME/.cache
copy_file .ready-tmux $USER_HOME
copy_file .zshenv $USER_HOME

#which one to source first?
source $XDG_CONFIG_HOME/zsh/.zshrc

